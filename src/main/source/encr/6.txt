package online

object CommandParser {
  def parse(commandLine: String): LibraryOperation[String] = commandLine.split(' ').toList match {
    case command :: arguments if arguments.nonEmpty =>
      command match {

ICAgICAgICBjYXNlICJhZGRDbGllbnQiID0+IExpYnJhcnlPcGVyYXRpb24oZGIgPT4KICAgICAgICAgIGRiLmNvcHkoY2xpZW50cyA9IGRiLmNsaWVudHMgOisgQ2xpZW50KGFyZ3VtZW50cy5ta1N0cmluZygiICIpKSkgLT4gUmlnaHQoIm9rIikKICAgICAgICApCgogICAgICAgIGNhc2UgImFkZEJvb2siID0+IHsKICAgICAgICAgIHZhbCB0b3RhbEFyZ3VtZW50ID0gYXJndW1lbnRzLm1rU3RyaW5nKCIgIikuc3BsaXQoJ3wnKQogICAgICAgICAgdmFsIG5hbWUgPSB0b3RhbEFyZ3VtZW50LmhlYWRPcHRpb24KICAgICAgICAgIHZhbCBhdXRob3IgPSB0b3RhbEFyZ3VtZW50LmRyb3AoMSkuaGVhZE9wdGlvbgogICAgICAgICAgKG5hbWUsIGF1dGhvcikgbWF0Y2ggewogICAgICAgICAgICBjYXNlIChTb21lKG5hbWUpLCBTb21lKGF1dGhvcikpID0+ICBMaWJyYXJ5T3BlcmF0aW9uIHsgZGIgPT4gZGIuY29weShib29rcyA9IGRiLmJvb2tzIDorIEJvb2sobmFtZSwgYXV0aG9yKSkgLT4gUmlnaHQoIm9rIikgfQogICAgICAgICAgICBjYXNlIF8gPT4gTGlicmFyeU9wZXJhdGlvbi5mYWlsdXJlKG5ldyBSdW50aW1lRXhjZXB0aW9uKCJ3cm9uZyBzeW50YXgiKSkKICAgICAgICAgIH0KICAgICAgICB9CgogICAgICAgIGNhc2UgXyA9PiBMaWJyYXJ5T3BlcmF0aW9uLmZhaWx1cmUobmV3IEV4Y2VwdGlvbigidW5rbm93biBjb21tYW5kIikpCiAgICAgIH0KICAgIGNhc2UgXyA9PiBMaWJyYXJ5T3BlcmF0aW9uLmZhaWx1cmUobmV3IEV4Y2VwdGlvbigid3Jvbmcgc3ludGF4IikpCiAgfQp9Cgp0cmFpdCBDb21tYW5kIHsKICBkZWYgY291bGRQYXJzZShjb21tYW5kTGluZTogU3RyaW5nKTogQm9vbGVhbgoKICBkZWYgcGFyc2UoY29tbWFuZExpbmU6IFN0cmluZyk6IExpYnJhcnlPcGVyYXRpb25bU3RyaW5nXQp9

  def parse(commandLine: String): LibraryOperation[String] = (defaultCommands ++ additionalCommands)
    .dropWhile(!_.couldParse(commandLine))
    .headOption
    .map(_.parse(commandLine))
    .getOrElse(LibraryOperation.failure(new Exception("unknown command")))
}